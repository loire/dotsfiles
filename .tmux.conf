set-option -g default-shell /usr/bin/zsh
set-option -g default-command /usr/bin/zsh

#change escape command
unbind C-b
set -g prefix C-Space
bind-key C-Space send-prefix
#set -g prefix C-h

#Source this file with C-Space r
bind-key r source-file ~/.tmux.conf

#Windows
set -g base-index 1 #Commencer numérotation à 1
bind-key C-x rename-window $PWD

#Movement
bind-key y split-window -h 
bind-key m split-window
bind-key A send-keys "echo 'TMUX_CURRENT_DIR=`pwd`\ntmux split-window $1\ntmux send-keys \"cd \$TMUX_CURRENT_DIR;clear\" C-m' > ~/.tmux-panes" C-m \; send-keys "chmod 700 .tmux-panes"
bind-key C-y send-keys "~/.tmux-panes -h" C-m
bind-key C-m send-keys "~/.tmux-panes -v" C-m

bind-key -n C-j select-pane -t :.+
bind-key -n C-k select-pane -t :.-
bind-key -r C-h prev
bind-key -r C-l next

bind-key C-Up select-pane -t :.-
bind-key C-Down select-pane -t :.+ 
#bind-key -n C-j send-keys C-Space C-Down \; select-pane -t :.+
#bind-key -n C-k send-keys C-Up
bind-key -n C-Left prev
bind-key -n C-Right next

bind-key p switch-client -p
bind-key n switch-client -n

bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Open new windows / panes in the same directory
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"



#Copy-mode
bind-key j copy-mode 
bind-key k copy-mode 
bind-key Escape copy-mode
bind-key C-u copy-mode 
bind-key u copy-mode 
bind-key -t vi-copy u search-backward
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-selection
bind-key -t vi-copy C-h previous-space
bind-key -t vi-copy C-l next-space
bind-key -t vi-copy e next-space-end
bind-key C-p paste-buffer

#USELESS since tmux 1.8
#Mode zoom dezoom sur un pane
#bind z new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \; swap-pane -s tmux-zoom.0 \; select-window -t tmux-zoom
#bind Z last-window \; join-pane -s tmux-zoom.0 \; kill-window -t tmux-zoom \; select-layout tiled
#bind a select-layout tiled

#Mode vi and no escape-time for a vim without laggy Escape
set -g mode-keys vi
set-option -g status-keys vi

#set -g mode-mouse on
set escape-time 0


set-option -g set-titles on

set-window-option -g window-status-attr default
set-window-option -g window-status-bg black
set-window-option -g window-status-fg white
set-window-option -g window-status-current-attr default
set-window-option -g window-status-current-bg white
set-window-option -g window-status-current-fg black
#set-window-option -g window-status-alert-bg black
#set-window-option -g window-status-alert-fg white
#set-window-option -g window-status-alert-attr bold
set-window-option -g automatic-rename on
set-window-option -g aggressive-resize on

#set -g status-justify centre #Centrer listes windows

#set-window-option -g xterm-keys on

# Must set default-command to $SHELL, in order to not source ~/.profile
# BUG: Should *not* hardcode /bin/bash here
set -g status-bg black
set -g status-fg colour014 
set -g status-left-length 256
set -g status-right-length 256
set -g status-interval 2

set -g status-right '#(tmux-mem-cpu-load 2)  #(sensors | grep "Core 0" | cut -d" " -f9) %m/%d %H:%M'


# Highlight active window
setw -g window-status-current-fg colour015
setw -g window-status-fg colour014
setw -g window-status-current-bg black

# # Set window notifications
 setw -g monitor-activity on
 set -g visual-activity on
#
# # Automatically set window title
setw -g automatic-rename on
#
# # Use mouse to select pane
 set -g mouse-select-pane on

#Afficher toutes 256couleurs : for i in {0..255} ; do printf "\x1b[38;5;${i}mcolour${i}\n"; done"]"
setw -g pane-active-border-fg colour232
setw -g pane-border-fg colour238

set -g default-terminal "screen-256color"

#xclip export to clipboard buffer
#bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
#bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"
bind C-c run "tmux show-buffer - | xsel -i -b"
bind C-v run "tmux set-buffer -- \"$(xsel -o -b)\"; tmux paste-buffer"

# Don't know exactly what it does so I comment it :
#bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"




